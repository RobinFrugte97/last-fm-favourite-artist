{"version":3,"sources":["styling/globalStyling.ts","helpers/functions.ts","styling/albumListStyling.ts","styling/albumStyling.ts","styling/headerStyling.ts","components/AlbumList.tsx","styling/trackStyling.ts","state/action-creators/index.ts","state/reducers/favouritesReducer.ts","state/reducers/index.ts","state/store.ts","components/Track.tsx","components/Album.tsx","components/Header.tsx","styling/favouritesStyling.ts","components/Favourites.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","fetchData","url","a","fetch","response","json","data","secondsToMinutes","stringTime","time","Number","Math","floor","slice","removeTrack","state","payload","newArr","forEach","track","index","name","toLowerCase","splice","List","styled","div","ArtistName","h1","AlbumCard","section","AlbumListImage","img","AlbumLink","Link","AlbumName","h2","AlbumSection","AlbumImage","AlbumInfo","InfoContainer","AlbumDate","p","AlbumPlaycount","TrackList","ul","NoTracks","HomeLink","ArtistImage","ImageContainer","FadeOverlay","FavouritesLink","AlbumList","useState","artistData","setArtistData","useEffect","process","then","topalbums","artist","albums","album","className","Fragment","to","map","src","image","alt","Track","li","TrackNumber","span","TrackName","TrackDuration","TrackButton","button","MinusButton","addToFavourite","dispatch","type","removeFromFavourite","initalState","duration","rank","playcount","reducers","combineReducers","favourites","action","concat","store","createStore","applyMiddleware","thunk","TrackItem","parent","console","log","useDispatch","bindActionCreators","actionCreators","onClick","Album","match","params","albumData","setAlbumData","listeners","mbid","tags","tracks","wiki","published","length","Header","FavouritesSection","FavouritesTitle","AddFavourites","Favourites","cleanFavourites","useSelector","shift","removeInitialstate","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac5939da.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n    transition: ease .2s;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    font-family: Barlow,Open Sans,Lucida Grande,Helvetica Neue,Helvetica,Arial,Sans-serif;\r\n  }\r\n`","import { Track } from \"../interface\"\r\n\r\nconst fetchData = async (url: string) => {\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nconst secondsToMinutes = (stringTime: string) => { \r\n    const time = Number(stringTime)\r\n    return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2) \r\n}\r\n\r\nconst removeTrack = (state: Array<Track>, payload: Track) => {\r\n    const newArr = [...state]\r\n    newArr.forEach((track, index: number) => {\r\n        if (track.name.toLowerCase() === payload.name.toLowerCase()) {\r\n            newArr.splice(index, index+1)\r\n        }\r\n    })\r\n    return newArr\r\n}\r\n\r\nconst removeInitialstate = (favourites: Array<Track>) => {\r\n    if (favourites[0].name === \"\") {\r\n        favourites.shift()\r\n        return favourites\r\n    } else {\r\n        return favourites\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchData,\r\n    secondsToMinutes,\r\n    removeTrack,\r\n    removeInitialstate\r\n}","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst List = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 1rem;\r\n    width: auto;\r\n    padding: 3rem 10%;\r\n    background-color: white;\r\n\r\n    @media (max-width: 1280px) {\r\n        padding: 3rem 0;\r\n    }\r\n\r\n    @media (max-width: 1000px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n    @media (max-width: 670px) {\r\n        width: 100%;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nconst ArtistName = styled.h1`\r\n    width: fit-content;\r\n    font-size: 5rem;\r\n    margin-top: 20%;\r\n    margin-left: 3rem;\r\n    color: white;\r\n`\r\n\r\nconst AlbumCard = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n`\r\n\r\nconst AlbumListImage = styled.img`\r\n    transistion: .3s ease;\r\n    &:hover {\r\n        transform: scale(1.025);\r\n    }\r\n`\r\n\r\nconst AlbumLink = styled(Link)`\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nconst AlbumName = styled.h2`\r\n    max-width: 16em;\r\n    color: black;\r\n    text-align: center;\r\n`\r\n\r\n\r\n\r\nexport { List, ArtistName, AlbumCard, AlbumListImage, AlbumLink, AlbumName }","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AlbumSection = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 24%;\r\n    width: 100%;\r\n    background-color: white;\r\n    min-height: 60em;\r\n\r\n\r\n    @media (max-width: 1400px) {\r\n        margin-top: 29%;\r\n    }\r\n\r\n    @media (max-width: 1280px) {\r\n        margin-top: 40%;\r\n    }\r\n    @media (max-width: 800px) {\r\n        margin-top: 70%;\r\n    }\r\n`\r\n\r\nconst AlbumImage = styled.img`\r\n    max-width: 20rem;\r\n\r\n    @media (max-width: 1280px) {\r\n        width: 15em;\r\n    }\r\n`\r\n\r\nconst AlbumName = styled.h1`\r\n    color: white;\r\n    margin: 0;\r\n    font-size: 2.5rem;\r\n`\r\n\r\nconst AlbumInfo = styled.div`\r\n    position: absolute;\r\n    left: 5%;\r\n    transform: translateY(-80%);\r\n    display: flex;\r\n    width: 31em;\r\n\r\n    @media (max-width: 1100px) {\r\n        position: relative;\r\n        left: auto;\r\n        width: 30em;\r\n    }\r\n    @media (max-width: 700px) {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        align-items: center;\r\n    }\r\n    @media (max-width: 400px) {\r\n        transform: translateY(-50%);\r\n    }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n    padding: .5rem 2rem;\r\n`\r\n\r\nconst AlbumDate = styled.p`\r\n    color: white;\r\n    font-style: italic;\r\n`\r\n\r\nconst AlbumPlaycount = styled.p`\r\n    color: white;\r\n    font-weight: bold;\r\n`\r\n\r\nconst TrackList = styled.ul`\r\n    width: 35%;\r\n    height: fit-content;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    padding: 0;\r\n\r\n    @media (max-width: 1100px) {\r\n        transform: translateY(-17%);\r\n    }\r\n    @media (max-width: 900px) {\r\n        width: 75%;\r\n    }\r\n    @media (max-width: 700px) {\r\n        transform: translateY(-25%);\r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 85%;\r\n    }\r\n`\r\n\r\nconst NoTracks = styled.h1`\r\n    text-align: center;\r\n    font-size: 2rem;\r\n`\r\n\r\nconst HomeLink = styled(Link)`\r\n    color: steelblue;\r\n    font-weight: bold;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    position: fixed;\r\n    font-size: 1.5rem;\r\n    background: white;\r\n    padding: .5rem 1rem;\r\n    text-decoration: none;\r\n    z-index: 3;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nexport { \r\n    AlbumSection, \r\n    AlbumImage, \r\n    AlbumName, \r\n    TrackList, \r\n    HomeLink, \r\n    AlbumDate, \r\n    AlbumInfo, \r\n    InfoContainer, \r\n    AlbumPlaycount,\r\n    NoTracks\r\n}","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ArtistImage = styled.img`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    width: 66%;\r\n    min-width: 20rem;\r\n    z-index: -2;\r\n\r\n    @media (max-width: 800px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: black;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: -2;\r\n\r\n    \r\n`\r\n\r\nconst FadeOverlay = styled.div`\r\n    background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 5%, rgba(0,0,0,0) 100%);\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    width: 66%;\r\n    height: 100vh;\r\n    min-width: 20rem;\r\n    z-index: -1;\r\n\r\n    @media (max-width: 800px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst FavouritesLink = styled(Link)`\r\n    color: steelblue;\r\n    font-weight: bold;\r\n    top: 1rem;\r\n    right: 1rem;\r\n    position: fixed;\r\n    font-size: 1.5rem;\r\n    background: white;\r\n    padding: .5rem 1rem;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nexport { ArtistImage, ImageContainer, FadeOverlay, FavouritesLink }","import React, { useState, useEffect } from 'react'\r\n\r\nimport { IState as Props } from '../interface'\r\nimport { fetchData } from '../helpers/functions'\r\nimport { List, ArtistName, AlbumCard, AlbumListImage, AlbumLink, AlbumName } from '../styling/albumListStyling'\r\nimport { NoTracks } from '../styling/albumStyling'\r\nimport { FavouritesLink } from '../styling/headerStyling'\r\n\r\nconst { REACT_APP_API_KEY } = process.env\r\n\r\nconst AlbumList: React.FC<Props> = () => {\r\n\r\n    const [artistData, setArtistData] = useState<Props[\"artist\"]>()\r\n\r\n    useEffect(() => {\r\n        const gatherData = () => {\r\n            fetchData(`https://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=erra&api_key=${REACT_APP_API_KEY}&format=json&limit=12`)\r\n            .then(data => {\r\n                setArtistData({\r\n                    name: data.topalbums[\"@attr\"].artist,\r\n                    albums: data.topalbums.album\r\n                })\r\n            })\r\n        }\r\n        gatherData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"AlbumList\">\r\n            {artistData ?\r\n                <React.Fragment>\r\n                    <FavouritesLink to={`/favourites`}>Favourites</FavouritesLink>\r\n\r\n                    <ArtistName>{artistData?.name}</ArtistName>\r\n                    <List>\r\n                        {artistData?.albums?.map((album, index) => {\r\n                            return (\r\n                                <AlbumLink key={index} to={`/album/${album.name}`}>\r\n                                    <AlbumCard>\r\n                                        <AlbumListImage src={album.image[3]['#text']} alt=\"\" />\r\n                                        <AlbumName>{album.name}</AlbumName>\r\n                                    </AlbumCard>\r\n                                </AlbumLink>\r\n                            )\r\n                        })}\r\n                    </List>\r\n                </React.Fragment>\r\n            :\r\n            <NoTracks>Loading...</NoTracks>\r\n        }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AlbumList\r\n","import styled from 'styled-components'\r\n\r\nconst Track = styled.li`\r\n    position: relative;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: 4rem;\r\n    justify-content: space-between;\r\n    margin: 1rem 0;\r\n\r\n    &:after {\r\n        position: absolute;\r\n        content: \"\";\r\n        display: block;\r\n        margin: 0 auto;\r\n        width: 80%;\r\n        padding-top: 72px;\r\n        transform: translateX(13%);\r\n        border-bottom: 1px rgba(0, 0,0,.15) solid;\r\n    }\r\n`\r\n\r\nconst TrackNumber = styled.span`\r\n    font-size: 3rem;\r\n    font-weight: bold;\r\n    color: steelblue;\r\n    margin-right: 2rem\r\n`\r\n\r\nconst TrackName = styled.h2`\r\n    line-height: 0.5em;\r\n`\r\n\r\nconst TrackDuration = styled.span`\r\n    font-weight: 100;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nconst TrackButton = styled.button`\r\n    border: none;\r\n    border-radius: 10%;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    background-color: steelblue;\r\n    color: white;\r\n    cursor: pointer;\r\n    font-size: 3rem;\r\n    text-align: center;\r\n    line-height: 1rem;\r\n    padding-left: 8px;\r\n\r\n    &:hover {\r\n        transform: scale(1.1)\r\n    }\r\n\r\n    &:active {\r\n        transform: scale(.9)\r\n    }\r\n`\r\n\r\nconst MinusButton = styled(TrackButton)`\r\n    padding-bottom: 7px;\r\n    line-height: 0rem;\r\n`\r\n\r\nexport {\r\n    Track,\r\n    TrackNumber,\r\n    TrackName,\r\n    TrackDuration,\r\n    TrackButton,\r\n    MinusButton\r\n}","import { Track, Action } from \"../../interface\"\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\nconst addToFavourite = (track: Track) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: \"add\",\r\n            payload: track\r\n        })\r\n    }\r\n}\r\n\r\nconst removeFromFavourite = (track: Track) => {\r\n    return (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: \"remove\",\r\n            payload: track\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    addToFavourite,\r\n    removeFromFavourite\r\n}","import { removeTrack } from \"../../helpers/functions\"\r\nimport { Track, Action } from \"../../interface\"\r\n\r\nconst initalState = [{\r\n        name: \"\",\r\n        duration: \"\",\r\n        artist: {},\r\n        album: \"\",\r\n        '@attr': {\r\n            rank: \"\"\r\n        },\r\n        playcount: \"\",\r\n        url: \"\"\r\n}]\r\n\r\nexport const favouritesReducer = (state: Array<Track> = initalState, action: Action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return state.concat([action.payload])\r\n        case 'remove':\r\n            return removeTrack(state, action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { favouritesReducer } from './favouritesReducer'\r\n\r\nconst reducers = combineReducers({\r\n    favourites: favouritesReducer\r\n})\r\n\r\nexport default reducers\r\n\r\nexport type State = ReturnType<typeof reducers>","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from \"./reducers\"\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n)","import { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { Track, TrackNumber, TrackName, TrackDuration, TrackButton, MinusButton } from '../styling/trackStyling'\r\nimport { secondsToMinutes } from '../helpers/functions'\r\nimport { actionCreators } from '../state'\r\n\r\n\r\nconst TrackItem: React.FC<any> = ({ track, parent }) => {\r\n    console.log(track)\r\n    const dispatch = useDispatch()\r\n\r\n    const { addToFavourite, removeFromFavourite } = bindActionCreators(actionCreators, dispatch)\r\n\r\n    return (\r\n        <Track>\r\n            <TrackNumber>#{track['@attr'].rank}</TrackNumber>\r\n            <TrackName>\r\n                <TrackDuration>{secondsToMinutes(track.duration)} - </TrackDuration>\r\n                {track.name}\r\n            </TrackName>\r\n            {parent === 'album' ?\r\n                <TrackButton onClick={() => addToFavourite(track)}>+</TrackButton>\r\n            :\r\n                <MinusButton onClick={() => removeFromFavourite(track)}>-</MinusButton>\r\n            }\r\n        </Track>\r\n    )\r\n}\r\n\r\nexport default TrackItem","import React, { useState, useEffect } from 'react'\r\n\r\nimport TrackItem from './Track'\r\n\r\nimport { IAlbum } from '../interface'\r\nimport { fetchData } from '../helpers/functions'\r\nimport { AlbumSection, AlbumImage, AlbumName, TrackList, HomeLink, AlbumInfo, AlbumDate, InfoContainer, AlbumPlaycount, NoTracks } from '../styling/albumStyling'\r\nimport { FavouritesLink } from '../styling/headerStyling'\r\n\r\nconst { REACT_APP_API_KEY } = process.env\r\n\r\nconst Album: React.FC<any> = ({ match }) => {\r\n\r\n    const {\r\n        params: { album },\r\n    } = match;\r\n\r\n    const [albumData, setAlbumData] = useState<IAlbum[\"album\"]>()\r\n\r\n    useEffect(() => {\r\n        fetchData(`https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=${REACT_APP_API_KEY}&artist=erra&album=${album}&format=json`)\r\n            .then(data => {\r\n                setAlbumData({\r\n                    artist: data.album.artist,\r\n                    image: data.album.image,\r\n                    listeners: data.album.listeners,\r\n                    mbid: data.album.mbid,\r\n                    name: data.album.name,\r\n                    playcount: data.album.playcount,\r\n                    tags: data.album.tags,\r\n                    tracks: data.album.tracks,\r\n                    url: data.album.url,\r\n                    wiki: data.album.wiki\r\n                })\r\n            })\r\n    }, [album])\r\n\r\n    return (\r\n        <div className=\"Album\">\r\n\r\n            <HomeLink to={`/`}>Home</HomeLink>\r\n            <FavouritesLink to={`/favourites`}>Favourites</FavouritesLink>\r\n\r\n            {albumData ?\r\n                <React.Fragment>\r\n                    <AlbumSection>\r\n                        <AlbumInfo>\r\n                            <AlbumImage src={albumData.image[4]['#text']} alt=\"\" />\r\n                            <InfoContainer>\r\n                                <AlbumName>{albumData?.name}</AlbumName>\r\n                                <AlbumDate>{albumData?.wiki?.published}</AlbumDate>\r\n                                <AlbumPlaycount>Plays: {albumData?.playcount}</AlbumPlaycount>\r\n                            </InfoContainer>\r\n\r\n                        </AlbumInfo>\r\n                        <TrackList>\r\n                            {albumData.tracks.track.length > 1 ?\r\n                           \r\n                            albumData.tracks.track.map((track, index) => {\r\n                                return (\r\n                                    <TrackItem key={index} track={track} parent={'album'}/>\r\n                                )\r\n                            })\r\n                            :\r\n                                <NoTracks>No tracks found</NoTracks>\r\n                            }\r\n                        </TrackList>\r\n                    </AlbumSection>\r\n                </React.Fragment>\r\n                :\r\n                <NoTracks>Loading...</NoTracks>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Album;\r\n","import React from 'react'\r\nimport { ArtistImage, ImageContainer, FadeOverlay } from '../styling/headerStyling'\r\n\r\n\r\nconst Header: React.FC<any> = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <ImageContainer>\r\n                <FadeOverlay />\r\n                <ArtistImage src=\"https://lastfm.freetls.fastly.net/i/u/770x0/8c3331277c4ca3af3b07555c59af920b.webp#8c3331277c4ca3af3b07555c59af920b\" alt=\"\" />\r\n            </ImageContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nconst FavouritesSection = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 24%;\r\n    width: 100%;\r\n    background-color: white;\r\n    min-height: 60em;\r\n\r\n    @media (max-width: 1400px) {\r\n        margin-top: 29%;\r\n    }\r\n\r\n    @media (max-width: 1280px) {\r\n        margin-top: 40%;\r\n    }\r\n    @media (max-width: 800px) {\r\n        margin-top: 70%;\r\n    }\r\n`\r\n\r\nconst FavouritesTitle = styled.h1`\r\n    font-size: 2.5rem;\r\n`\r\n\r\nconst AddFavourites = styled.h2`\r\n\r\n`\r\n\r\nexport {\r\n    FavouritesSection,\r\n    FavouritesTitle,\r\n    AddFavourites\r\n}","import React from \"react\"\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport TrackItem from \"./Track\"\r\n\r\nimport { State } from '../state'\r\nimport { HomeLink, TrackList } from \"../styling/albumStyling\"\r\nimport { FavouritesSection, FavouritesTitle, AddFavourites } from \"../styling/favouritesStyling\"\r\nimport { removeInitialstate } from \"../helpers/functions\"\r\nimport { Track } from \"../interface\"\r\n\r\nconst Favourites: React.FC<any> = () => {\r\n\r\n    const favourites: Array<Track> = useSelector((state: State) => state.favourites)\r\n    let cleanFavourites\r\n    if (favourites.length > 0) {\r\n        cleanFavourites = removeInitialstate(favourites)\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <HomeLink to='/'>Home</HomeLink>\r\n            <FavouritesSection>\r\n                <FavouritesTitle>Favourites</FavouritesTitle>\r\n                {favourites.length > 0 ?\r\n                    <TrackList>\r\n                            {cleanFavourites?.map((track, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <TrackItem  track={track} parent={'favourites'}/>\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </TrackList>\r\n                : \r\n                    <AddFavourites>Add tracks to your favourites..</AddFavourites>\r\n                }\r\n            </FavouritesSection>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Favourites","import React from 'react'\nimport { Route, HashRouter as Router } from \"react-router-dom\"\nimport { GlobalStyle } from './styling/globalStyling'\n\nimport AlbumList from './components/AlbumList'\nimport Album from './components/Album'\nimport Header from './components/Header'\nimport Favourites from './components/Favourites'\n\nconst App = () => {\n  return (\n      <div className=\"App\">\n        <GlobalStyle />\n        <Header />\n        <React.Fragment>\n          <Router>\n            <Route exact path=\"/\" component={AlbumList} />\n            <Route exact path=\"/favourites\" component={Favourites} />\n            <Route path=\"/album/:album\" component={Album} />\n          </Router>\n        </React.Fragment>\n      </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\n\nimport { store } from './state'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}